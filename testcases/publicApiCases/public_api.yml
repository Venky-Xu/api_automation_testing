- config:
    name: "Public-Api test cases"
    verify: False
    variables:
      sku: ${create_sku()}
      uniqueRefId: ${get_unique_refid()}
      receiptNumber: ${create_uuid_15()}
      timeZoneUTC: ${get_datetime()}
    base_url: ${ENV(PUBLIC_API_BASE_URL)}

- test:
    name: "Get Stores"
    api: api/Public_Api/getStores.yml
    extract:
      - storeId: content.0.id
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get Inventory by Store ID"
    api: api/Public_Api/getInventory.yml
    extract:
      - productId: content.0.productId
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get Employees"
    api: api/Public_Api/getEmployees.yml
    extract:
      - employeeId: content.0.id
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get Purchase Orders"
    api: api/Public_Api/getPurchaseOrders.yml
    extract:
      - purchaseOrderId: content.0.purchaseOrderId
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get Purchase Orders by ID"
    api: api/Public_Api/getPurchaseOrderbyId.yml
    validate:
      - eq: [status_code, 200]

- test:
    name: "Search Timesheets"
    api: api/Public_Api/searchTimesheets.yml
    validate:
      - eq: [status_code, 200]

- test:
    name: "Create a new product"
    api: api/Public_Api/createProduct.yml
    extract:
      - productId: content.id
      - unitPrice: content.unitPrice
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get a product list"
    api: api/Public_Api/getProducts.yml
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get a product by ID"
    api: api/Public_Api/getProductbyId.yml
    validate:
      - eq: [status_code, 200]

- test:
    name: "Get customer lists"
    api: api/Public_Api/getCustomerslist.yml
    validate:
      - eq: [status_code, 200]
  
- test:
    name: "Create a new customer"
    api: api/Public_Api/createCustomer.yml
    extract:
      - customerRefId: content.refId
      - customerEmail: content.email
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Get customer by email ID"
    api: api/Public_Api/getCustomerbyEmail.yml
    validate:
      - eq: [status_code, 200]

- test:
    name: "Update an existing customer"
    api: api/Public_Api/updateCustomer.yml
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Create a new PriceBook"
    api: api/Public_Api/addPricebooks.yml
    extract:
      - priceBookId: content.id
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Add an item in pricebook"
    api: api/Public_Api/addPricebookItem.yml
    extract:
      - priceBookItemId: content.id
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Get Pricebook items"
    api: api/Public_Api/getPricebookItems.yml
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Update Pricebook item"
    api: api/Public_Api/updatePricebookItem.yml
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Remove an item in Pricebook"
    api: api/Public_Api/removePricebookItem.yml
    validate:
      - eq: [status_code, 200] 

- test:
    name: "Get Transactions"
    api: api/Public_Api/getTransactions.yml
    validate:
        - eq: [status_code, 200]

- test:
    name: "Add a transaction"
    api: api/Public_Api/addTransaction.yml
    setup_hooks:
        - ${sleep(60)}
    extract:
        transactionRefId: content.refId
    validate:
        - eq: [status_code, 200]

- test:
    name: "Cancel a transaction"
    api: api/Public_Api/cancelTransaction.yml
    validate:
        - eq: [status_code, 200]
